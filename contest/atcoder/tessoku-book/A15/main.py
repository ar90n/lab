#!/usr/bin/env python3
import sys
from operator import getitem


def solve(N: int, A: "List[int]"):
    last = None
    ret = [(0, -1)]
    for v, i in sorted(zip(A, range(N))):
        if v == last:
            ret.append((ret[-1][0], i))
        else:
            last = v
            ret.append((ret[-1][0] + 1, i))

    print(" ".join([str(v) for v, _ in sorted(ret, key=lambda v: v[1])][1:]))
    return


# Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
