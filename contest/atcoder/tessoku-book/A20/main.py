#!/usr/bin/env python3
import sys


def solve(S: str, T: str):
    dp = [[0] * (len(S) + 1) for _ in range(len(T) + 1)]
    for i, t in enumerate(T):
        for j, s in enumerate(S):
            dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j], dp[i][j] + int(t == s))
    print(dp[-1][-1])
    return


# Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    T = next(tokens)  # type: str
    solve(S, T)

if __name__ == '__main__':
    main()
