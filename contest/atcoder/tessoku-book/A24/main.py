#!/usr/bin/env python3
import sys
import bisect


def solve(N: int, A: "List[int]"):
    dp = [0] * 100009
    for i in range(1, N+1):
        dp[i] = 1
        for j in range(1, i):
            if A[j-1] < A[i-1]:
                dp[i] = max(dp[i], dp[j] + 1)
    print(dp[N])

    return


# Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
