<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://lab.ar90n.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lab.ar90n.net/" rel="alternate" type="text/html" /><updated>2022-08-12T13:16:42-05:00</updated><id>https://lab.ar90n.net/feed.xml</id><title type="html">lab note</title><subtitle>My lab notebook</subtitle><entry><title type="html">XG-C100Cを追加してオンボードNICとブリッジ接続する</title><link href="https://lab.ar90n.net/ubuntu/2022/08/12/xg-c100c-in-ubuntu-server.html" rel="alternate" type="text/html" title="XG-C100Cを追加してオンボードNICとブリッジ接続する" /><published>2022-08-12T00:00:00-05:00</published><updated>2022-08-12T00:00:00-05:00</updated><id>https://lab.ar90n.net/ubuntu/2022/08/12/xg-c100c-in-ubuntu-server</id><content type="html" xml:base="https://lab.ar90n.net/ubuntu/2022/08/12/xg-c100c-in-ubuntu-server.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;Ubuntu 22.04で運用している開発用マシンに&lt;a href=&quot;https://www.asus.com/jp/Networking-IoT-Servers/Wired-Networking/All-series/XG-C100C/&quot;&gt;XG-C100C&lt;/a&gt;を追加した記録です。
最終的に以下のような環境を構築します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;┌───────────────┐                     ┌──────────────┐              ┌────────────────┐
│               │                     │              │              │                │
│               │ 10.0.0.100/24       │              │ Dynamic      │                │
│  MacBook Pro  ├─────────────────────┤  Dev Server  ├──────────────┤  Home Network  │
│               │                     │              │              │                │
│               │                     │              │              │                │
└───────────────┘                     └──────────────┘              └────────────────┘
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Ubuntu22.04にXG-C100Cを導入&lt;/li&gt;
  &lt;li&gt;既存のNIC（オンボード）とXG-C100Cとの間をブリッジ接続&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;xg-c100cの導入&quot;&gt;XG-C100Cの導入&lt;/h2&gt;
&lt;p&gt;ASUSの&lt;a href=&quot;https://www.asus.com/jp/Networking-IoT-Servers/Wired-Networking/All-series/XG-C100C/HelpDesk_Download/&quot;&gt;サイト&lt;/a&gt;にあるドライバはバージョンが古い（5.0.3.3）ため私の環境（kernel 5.15.0-43）でコンパイルすることができませんでした。
そこで、 &lt;a href=&quot;https://www.marvell.com/support/downloads.html&quot;&gt;Marvellのダウンロードページ&lt;/a&gt;からAQC107Cを選択してドライバを取得します。&lt;/p&gt;

&lt;p&gt;ダウンロード完了後、以下のように指示通り作業を行うとドライバを導入します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ unzip Marvell_Linux_2.5.5.zip
Archive:  Marvell_Linux_2.5.5.zip
   creating: 05-23-22_Marvell_Linux_2.5.5/
  inflating: 05-23-22_Marvell_Linux_2.5.5/atlantic-2.5.5.0-1.noarch.rpm
 extracting: 05-23-22_Marvell_Linux_2.5.5/atlantic.tar.gz
  inflating: 05-23-22_Marvell_Linux_2.5.5/README.txt
  inflating: 05-23-22_Marvell_Linux_2.5.5/Release_Notes_Linux_2.5.5.txt
$ cd 05-23-22_Marvell_Linux_2.5.5
$ tar -zxf atlantic.tar.gz
$ sudo ./dkms.sh install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;追加したNICの名称を確認します。正しい方法がわからないので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dmesg&lt;/code&gt; からそれっぽいものを持ってきます。
今回追加したNICは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enp4s0&lt;/code&gt;という名称が付けられているようです。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo dmesg| grep atlantic
[    2.502420] atlantic 0000:04:00.0: enabling device (0000 -&amp;gt; 0002)
[    2.540366] atlantic: Detect ATL2FW 1030012
[    5.859800] atlantic 0000:04:00.0 enp4s0: renamed from eth1
[   17.700034] atlantic 0000:04:00.0 enp4s0: atlantic: link change old 0 new 1000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nic間のブリッジ接続&quot;&gt;NIC間のブリッジ接続&lt;/h2&gt;

&lt;p&gt;‘/etc/netplan/00-installer-config.yaml’を修正して既存のNIC(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eno1&lt;/code&gt;)とブリッジ接続します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat /etc/netplan/00-installer-config.yaml
# This is the network config written by 'subiquity'
network:
  ethernets:
    eno1: {}
    enp4s0: {}
  bridges:
    br0:
      interfaces:
        - eno1
        - enp4s0
      dhcp4: true
  version: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MacBook Pro &amp;lt;-&amp;gt; Home Network間の通信を透過的に行うためufwを設定します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo ufw allow from 10.0.0.0/24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/default/ufw ufw.org&lt;/code&gt;も以下のように修正します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ diff /etc/default/ufw ufw.org
19c19
&amp;lt; DEFAULT_FORWARD_POLICY=&quot;ACCEPT&quot;
---
&amp;gt; DEFAULT_FORWARD_POLICY=&quot;DROP&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.marvell.com/support/downloads.html&quot;&gt;Marvell Drivers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://netplan.io/reference&quot;&gt;Netplan reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Ubuntu" /><summary type="html">はじめに Ubuntu 22.04で運用している開発用マシンにXG-C100Cを追加した記録です。 最終的に以下のような環境を構築します。</summary></entry><entry><title type="html">Goで類似ベクトルを検索する</title><link href="https://lab.ar90n.net/go/algorithm/machinelearning/vectorsimilaritysearch/2022/02/01/mimic-annoy-wiht-go.html" rel="alternate" type="text/html" title="Goで類似ベクトルを検索する" /><published>2022-02-01T00:00:00-06:00</published><updated>2022-02-01T00:00:00-06:00</updated><id>https://lab.ar90n.net/go/algorithm/machinelearning/vectorsimilaritysearch/2022/02/01/mimic-annoy-wiht-go</id><content type="html" xml:base="https://lab.ar90n.net/go/algorithm/machinelearning/vectorsimilaritysearch/2022/02/01/mimic-annoy-wiht-go.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;類似ベクトル検索を実現する代表的な実装に&lt;a href=&quot;https://github.com/spotify/annoy&quot;&gt;Annoy&lt;/a&gt;があります．
今回，Goの修練としてAnnoyの一部機能をGoで再実装しました．&lt;/p&gt;

&lt;div class=&quot;jekyll-linkpreview-wrapper&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/ar90n/countrymaam&quot; target=&quot;_blank&quot;&gt;https://github.com/ar90n/countrymaam&lt;/a&gt;&lt;/p&gt;
  &lt;div class=&quot;jekyll-linkpreview-wrapper-inner&quot;&gt;
    &lt;div class=&quot;jekyll-linkpreview-content&quot;&gt;
      &lt;div class=&quot;jekyll-linkpreview-image&quot;&gt;
        &lt;a href=&quot;https://github.com/ar90n/countrymaam&quot; target=&quot;_blank&quot;&gt;
          &lt;img src=&quot;https://opengraph.githubassets.com/54cee1c174a8c66937f6fa22784a7da1c457e03d62a61de4969e09ff205edff4/ar90n/countrymaam&quot; /&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;div class=&quot;jekyll-linkpreview-body&quot;&gt;
        &lt;div class=&quot;jekyll-linkpreview-title&quot;&gt;
          &lt;a href=&quot;https://github.com/ar90n/countrymaam&quot; target=&quot;_blank&quot;&gt;GitHub - ar90n/countrymaam: Plain ann-search implementation with Go&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&quot;jekyll-linkpreview-description&quot;&gt;Plain ann-search implementation with Go. Contribute to ar90n/countrymaam development by creating an account on GitHub.&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;jekyll-linkpreview-footer&quot;&gt;
      &lt;a href=&quot;//github.com&quot; target=&quot;_blank&quot;&gt;github.com&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;kd-treeベースの探索アルゴリズムを実装&lt;/li&gt;
  &lt;li&gt;random projection treeベースの探索アルゴリズムを実装&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/erikbern/ann-benchmarks&quot;&gt;ann-benchmarks&lt;/a&gt;にてベンチマークを測定&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;annoyの詳細&quot;&gt;Annoyの詳細&lt;/h2&gt;
&lt;p&gt;Annoyの詳細については以下のページが大変勉強になりました．&lt;/p&gt;

&lt;div class=&quot;jekyll-linkpreview-wrapper&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;https://techblog.zozo.com/entry/annoy-explanation&quot; target=&quot;_blank&quot;&gt;https://techblog.zozo.com/entry/annoy-explanation&lt;/a&gt;&lt;/p&gt;
  &lt;div class=&quot;jekyll-linkpreview-wrapper-inner&quot;&gt;
    &lt;div class=&quot;jekyll-linkpreview-content&quot;&gt;
      &lt;div class=&quot;jekyll-linkpreview-image&quot;&gt;
        &lt;a href=&quot;https://techblog.zozo.com/entry/annoy-explanation&quot; target=&quot;_blank&quot;&gt;
          &lt;img src=&quot;https://cdn-ak.f.st-hatena.com/images/fotolife/v/vasilyjp/20201218/20201218144609.jpg&quot; /&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;div class=&quot;jekyll-linkpreview-body&quot;&gt;
        &lt;div class=&quot;jekyll-linkpreview-title&quot;&gt;
          &lt;a href=&quot;https://techblog.zozo.com/entry/annoy-explanation&quot; target=&quot;_blank&quot;&gt;近傍探索ライブラリ「Annoy」のコード詳解 - ZOZO TECH BLOG&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class=&quot;jekyll-linkpreview-description&quot;&gt;はじめまして、ZOZO研究所福岡の家富です。画像検索システムのインフラ、機械学習まわりを担当しています。 今回は画像検索システムでお世話になっているAnnoyについてじっくり紹介したいと思います。 目次 目次 Annoyについて 近傍探索について Annoyのソースコードを読むときのポイント AnnoyIndexというクラスのインスタンスを作る インストール過程について PythonのC/C++拡張 Annoyの実装 1. add_item 2. build 3. get_nns_by_vector 4. build再考 他に問題となる点について CPU依存部分 ディスクかメモリか まとめ さ…&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;jekyll-linkpreview-footer&quot;&gt;
      &lt;a href=&quot;//techblog.zozo.com&quot; target=&quot;_blank&quot;&gt;techblog.zozo.com&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;個人的には探索時のノードの取り扱い方が特に面白いと思ったので，そこの部分について少しだけ補足をしたいと思います．&lt;/p&gt;

&lt;p&gt;上記ページでも解説されている通り，探索時は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::pq_distance&lt;/code&gt;の結果を優先度として優先度付きキューにノードを追加します．
以下に実際にこの処理を行う箇所のコードを示します．&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pq_distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])));&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pq_distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ここで，各変数と関数の詳細は以下の通りです．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D&lt;/code&gt;: ベクトル間のメトリック&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::margin&lt;/code&gt;: クエリ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;から際（上述の解説ページに倣います）までの符号付き距離を計算&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::pq_distance&lt;/code&gt;: 探索するノードの優先度を計算&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;: 根ノードから現在のノードに至るまでの最悪の優先度&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q&lt;/code&gt;: 探索するノードを決定するための優先度付きキュー&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nd&lt;/code&gt;: 現在のノード&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;従って，ここでは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::pq_distance(d, margin, 1)&lt;/code&gt;という優先度で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nd-&amp;gt;children[1]&lt;/code&gt;を，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::pq_distance(d, margin, 0)&lt;/code&gt;という優先度で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nd-&amp;gt;children[0]&lt;/code&gt;を，優先度キューに追加していることがわかります．&lt;/p&gt;

&lt;p&gt;次に，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Euclidean&lt;/code&gt;として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D::pq_distance&lt;/code&gt;の詳細を示します．&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Euclidean&lt;/code&gt;には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pq_distance&lt;/code&gt;が実装されていないため，実際には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Minkowski&lt;/code&gt;の実装となります．&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pq_distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_nr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_nr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上記実装では，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;child_nr==0&lt;/code&gt;が成立する場合，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin&lt;/code&gt;の符号を反転しています．
この処理の具体例を以下の図に示します．
子ノードとして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;children[1]&lt;/code&gt;を選択した場合を考えます．この時，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query1&lt;/code&gt;に対するマージンは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin1&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query2&lt;/code&gt;に対するマージンは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-margin2&lt;/code&gt;となります．
同様に子ノードとして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;children[0]&lt;/code&gt;を選択した場合を考えます．この時，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query1&lt;/code&gt;に対するマージンは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-marign1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query2&lt;/code&gt;に対するマージンは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin2&lt;/code&gt;となります．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2022-02-01-mimic-annoy-wiht-go/cutplane.png&quot; alt=&quot;cutplane&quot; /&gt;&lt;/p&gt;

&lt;p&gt;その結果，子ノードの優先度は当該ノードが存在する側を正とした符号付き距離となります．&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distance&lt;/code&gt;は前述の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;（現在のノードに至るまでの最悪の優先度）が割り当てられています．
従って，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pq_distance&lt;/code&gt;は優先度が悪化した場合にその値を更新する振る舞いとなっていることが解ります．&lt;/p&gt;

&lt;p&gt;この性質によって，クエリが存在する側（優先度が正）のノードの探索が完了すると，クエリが存在しない側（優先度が負）のノードの探索に取り掛かります．
この様に, 場合分け等を行うことなく適切に次に探索すべきノードを選択できている点が非常に面白い実装だと思いました．&lt;/p&gt;

&lt;h2 id=&quot;実装詳細&quot;&gt;実装詳細&lt;/h2&gt;
&lt;p&gt;今回実装した主要なインターフェースと実装の関係を以下に示します．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2022-02-01-mimic-annoy-wiht-go/class.png&quot; alt=&quot;class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上図の各要素の詳細は詳細は以下のとおりです．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Index: 類似ベクトル検索のインターフェース．このインターフェースを用いてデータの登録や検索を実施&lt;/li&gt;
  &lt;li&gt;Candidate: 検索結果を表現する構造体&lt;/li&gt;
  &lt;li&gt;flatIndex: 線形探索による類似ベクトル検索の実装&lt;/li&gt;
  &lt;li&gt;bspTreeIndex: バイナリ空間分割木による類似ベクトル検索の実装&lt;/li&gt;
  &lt;li&gt;CutPlane: 際のインターフェース．このインターフェースを用いて空間を分割&lt;/li&gt;
  &lt;li&gt;kdCutPlane: Kd-Treeを実現するための際の実装&lt;/li&gt;
  &lt;li&gt;rpCutPlane: Random Projection Treeを実現するための際の実装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kd-TreeとRandom Projection Treeとは際をどの様に計算するかの違いしかありません．
そこで，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bspTreeIndex&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CutPlane&lt;/code&gt;の組み合わせで表現することとしました．
従って，Kd-Treeは&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bspTreeIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kdCutPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;と表現することができます．また，Random Projection Treeは&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bspTreeIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rpCutPlane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;と表現することができます．&lt;/p&gt;

&lt;h2 id=&quot;ベンチマーク&quot;&gt;ベンチマーク&lt;/h2&gt;
&lt;p&gt;類似ベクトル検索のベンチマークに&lt;a href=&quot;https://github.com/erikbern/ann-benchmarks&quot;&gt;ann-benchmarks&lt;/a&gt;があります．
今回の実装をこのベンチマークに対応させることで，既存の実装とパフォーマンスを比較しました．&lt;/p&gt;

&lt;h3 id=&quot;ann-benchmarksへアルゴリズムを追加する&quot;&gt;ann-benchmarksへアルゴリズムを追加する&lt;/h3&gt;
&lt;p&gt;ann-benchmarksへ新規にアルゴリズムを追加するためには，以下の作業が必要となります．
また，これらの修正結果は&lt;a href=&quot;https://github.com/ar90n/countrymaam/tree/main/benchmark&quot;&gt;こちら&lt;/a&gt;から取得可能です．&lt;/p&gt;

&lt;h4 id=&quot;アルゴリズムが動作するイメージのdockerfileを追加&quot;&gt;アルゴリズムが動作するイメージのDockerfileを追加&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ann-benchmarks/install/Dockefile.&amp;lt;algorithm name&amp;gt;&lt;/code&gt;というファイルに追加するアルゴリズムが動作するイメージの定義を記述します．
ベンチマークを実施するための共通処理は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ann-benchmarks&lt;/code&gt;というイメージに実装されています．
従って，このイメージを継承して不足分を追記することになります．&lt;/p&gt;

&lt;p&gt;今回はGoでアルゴリズムを実装しました．
従って，以下のように&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;実行ファイルをビルド&lt;/li&gt;
  &lt;li&gt;ベンチマーク用イメージにコピー&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という手順を踏むこととしました．&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; golang:1.18-rc as builder&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;go &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;github.com/ar90n/countrymaam/cmd/countrymaam@latest

&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ann-benchmarks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; --from=builder /go/bin/countrymaam /usr/local/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;類似ベクトル検索を行うプログラムを追加&quot;&gt;類似ベクトル検索を行うプログラムを追加&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ann-benchmarks/ann_benchmarks/algorithms/&amp;lt;algorithm name&amp;gt;.py&lt;/code&gt;というファイルに類似ベクトル検索を行うプログラムを記述します．
拡張子からも明らかですが，ベンチマークはPythonによって実装されています．
従って，類似ベクトル検索アルゴリズムもPythonから呼び出す必要があります．
具体的には，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BaseANN&lt;/code&gt;を継承し以下のメソッドを実装します．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fit: インデックスを作成します．引数として，サイズが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(サンプル数,次元)&lt;/code&gt;の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy.array&lt;/code&gt;が渡されます&lt;/li&gt;
  &lt;li&gt;set_query_arguments: テストセットに対する検索を行う前に一度だけ呼び出されます．検索に対するパラメータの設定を行います&lt;/li&gt;
  &lt;li&gt;query: 類似ベクトル検索を行います．引数としてクエリと求める類似ベクトルの数が渡されます&lt;/li&gt;
  &lt;li&gt;__init__: 引数として渡されたパラメータをもとにアルゴリズムの初期化します&lt;/li&gt;
  &lt;li&gt;__str__: 現在のパラメータとクラス名を文字列として返します&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回の実装ではPythonインターフェースを実装していません．
従って，実行ファイルをサブプロセスとして起動し，パイプを経由してデータの入出力を行います．
作成したクラスを以下に示します．&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Countrymaam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaseANN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_metric&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;index&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;kd-tree&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_n_trees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;n_trees&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_leaf_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;leaf_size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;suffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;index_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;f&quot;index_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suffix&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.bin&quot;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# インデックスを作成し，ファイルに書き出す
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;countrymaam&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;train&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--dim&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--index&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--leaf-size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_leaf_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--tree-num&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_n_trees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--output&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_file_path&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&quot;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# インデックスを読み，クエリの入力を待機する
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;countrymaam&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;predict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--dim&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--index&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;--input&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_file_path&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_query_arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_search_k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search_k&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 探索ノード数を設定
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&quot;=i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_search_k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 探索ノード数
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&quot;=i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 検索する類似ベクトル数
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&quot;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# クエリベクトル
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;=i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;=i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;f&quot;Countrymaam(index=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_index&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, leaf_size=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_leaf_size&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; n_trees=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_n_trees&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, search_k=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_search_k&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ベンチマークの設定ファイルにアルゴリズムの設定を追加&quot;&gt;ベンチマークの設定ファイルにアルゴリズムの設定を追加&lt;/h4&gt;
&lt;p&gt;ベンチマークに関する設定は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ann-benchmarks/algos.yaml&lt;/code&gt;というファイルに追記します．
このファイルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;データ型&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;メトリック&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;アルゴリズム&lt;/code&gt; という階層構造になっています．
従って，各アルゴリズムがサポートしているデータ型とメトリックに応じて，適切な位置に設定を記述する必要があります．&lt;/p&gt;

&lt;p&gt;データ型とメトリックの組み合わせは以下の通りです．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;float
    &lt;ul&gt;
      &lt;li&gt;any&lt;/li&gt;
      &lt;li&gt;euclidean&lt;/li&gt;
      &lt;li&gt;angular&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;bit
    &lt;ul&gt;
      &lt;li&gt;hamming&lt;/li&gt;
      &lt;li&gt;jaccard&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回実装したアルゴリズムはユークリッド距離にのみ対応しているため&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;euclidean&lt;/code&gt;に追記します．&lt;/p&gt;

&lt;p&gt;アルゴリズムの階層に記述するパラメータは以下の通りです．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker-tag: 使用するDockerイメージのタグ&lt;/li&gt;
  &lt;li&gt;module: アルゴリズムが実装されているモジュール&lt;/li&gt;
  &lt;li&gt;constructor: アルゴリズムの実装クラス&lt;/li&gt;
  &lt;li&gt;base-args: 全計測に渡ってconstructorに渡される引数の共通部分&lt;/li&gt;
  &lt;li&gt;run-groups: constructorとset_query_arguments渡される引数の可変部分&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最終的な差分は以下の様になりました．&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/algos.yaml b/algos.yaml
index 7c1ebe6..f170633 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/algos.yaml
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/algos.yaml
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@@ -391,6 +391,28 @@&lt;/span&gt; float:
           query-args: [[0.6, 0.8, 0.9, 1.0, 1.02, 1.05, 1.1, 1.2]]
 
   euclidean:
&lt;span class=&quot;gi&quot;&gt;+    countrymaam-kd:
+      docker-tag: ann-benchmarks-countrymaam
+      module: ann_benchmarks.algorithms.countrymaam
+      constructor: Countrymaam
+      base-args: [&quot;@metric&quot;]
+      run-groups:
+        kd:
+          arg-groups:
+            - {&quot;index&quot;: [&quot;rkd-tree&quot;], &quot;n_trees&quot;: [8, 16, 32, 64],
+               &quot;leaf_size&quot;:[8, 16, 32, 64]}
+          query-args: [[16, 32, 64, 128, 256, 512, 1024, 2048]]
+    countrymaam-rp:
+      docker-tag: ann-benchmarks-countrymaam
+      module: ann_benchmarks.algorithms.countrymaam
+      constructor: Countrymaam
+      base-args: [&quot;@metric&quot;]
+      run-groups:
+        rp:
+          arg-groups:
+            - {&quot;index&quot;: [&quot;rrp-tree&quot;], &quot;n_trees&quot;: [8, 16, 32, 64],
+               &quot;leaf_size&quot;:[8, 16, 32, 64]}
+          query-args: [[16, 32, 64, 128, 256, 512, 1024, 2048]]
&lt;/span&gt;     vamana(diskann):
       docker-tag: ann-benchmarks-diskann
       module: ann_benchmarks.algorithms.diskann
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run-groups&lt;/code&gt;における&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arg-groups&lt;/code&gt;が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__init__&lt;/code&gt;に渡されるパラメータを，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query-args&lt;/code&gt;が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_query_arguments&lt;/code&gt;に渡されるパラメータを表します．
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arg-groups&lt;/code&gt;の様に複数の属性からなるパラメータは各属性の直積が渡されます．&lt;/p&gt;

&lt;h3 id=&quot;ベンチマークの実行&quot;&gt;ベンチマークの実行&lt;/h3&gt;
&lt;p&gt;ベンチマークは以下のコマンドで実行します．&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install.py&lt;/code&gt;はコンテナの作成を，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run.py&lt;/code&gt;はベンチマークを実行します．
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;algorithm name&amp;gt;&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;dataset name&amp;gt;&lt;/code&gt;は省略可能です．省略した場合，適用可能な全てのアルゴリズムまたはデータセットに対して処理を適用します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python install.py &lt;span class=&quot;nt&quot;&gt;--algorithm&lt;/span&gt; &amp;lt;algorithm name&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python run.py &lt;span class=&quot;nt&quot;&gt;--algorithm&lt;/span&gt; &amp;lt;algorithm name&amp;gt; &lt;span class=&quot;nt&quot;&gt;--dataset&lt;/span&gt; &amp;lt;dataset name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;結果&quot;&gt;結果&lt;/h3&gt;
&lt;p&gt;以下の結果は，fashion-mnist&lt;a class=&quot;citation&quot; href=&quot;#xiao2017/online&quot;&gt;(Xiao et al., 2017)&lt;/a&gt;に対するベンチマークです．図中の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flann&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;annoy&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ann-benchmarks&lt;/code&gt;のデフォルト設定を用いています．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2022-02-01-mimic-annoy-wiht-go/fashion-mnist-784-euclidean.png&quot; alt=&quot;result&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPU: AMD Ryzen 9 3950X&lt;/li&gt;
  &lt;li&gt;Memory:  64GB&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;xiao2017/online&quot;&gt;Xiao, H., Rasul, K., &amp;amp; Vollgraf, R. (2017). &lt;i&gt;Fashion-MNIST: a Novel Image Dataset for Benchmarking Machine Learning Algorithms&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/erikbern/ann-benchmarks&quot;&gt;ann-benchmarks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/annoy&quot;&gt;Annoy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Go" /><category term="Algorithm" /><category term="MachineLearning" /><category term="VectorSimilaritySearch" /><summary type="html">はじめに 類似ベクトル検索を実現する代表的な実装にAnnoyがあります． 今回，Goの修練としてAnnoyの一部機能をGoで再実装しました．</summary></entry><entry><title type="html">cargo-editが上手く動かない時の回避策</title><link href="https://lab.ar90n.net/rust/2022/01/30/cargo-edit-workaround.html" rel="alternate" type="text/html" title="cargo-editが上手く動かない時の回避策" /><published>2022-01-30T00:00:00-06:00</published><updated>2022-01-30T00:00:00-06:00</updated><id>https://lab.ar90n.net/rust/2022/01/30/cargo-edit-workaround</id><content type="html" xml:base="https://lab.ar90n.net/rust/2022/01/30/cargo-edit-workaround.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/killercup/cargo-edit&quot;&gt;cargo-edit&lt;/a&gt; v0.8.0が上手く動かなかったので，その対処法についてのメモです．&lt;/p&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ssh-agentに秘密鍵を登録&lt;/li&gt;
  &lt;li&gt;v0.7.0にダウングレード&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;error-authenticating-no-auth-sock-variable-classssh-23-でcargo-editをインストールすることができない&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error authenticating: no auth sock variable; class=Ssh (23)&lt;/code&gt; で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo-edit&lt;/code&gt;をインストールすることができない&lt;/h2&gt;
&lt;p&gt;単純に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo install cargo-edit&lt;/code&gt; をすると，以下の様に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;との連携に失敗してエラーとなりました．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;cargo-edit
    Updating crates.io index
error: failed to fetch &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;https://github.com/rust-lang/crates.io-index&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

Caused by:
  failed to authenticate when downloading repository: ssh://git@github.com/rust-lang/crates.io-index

  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; attempted ssh-agent authentication, but no usernames succeeded: &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the git CLI succeeds &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;net.git-fetch-with-cli&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; may &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;here
  https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli

Caused by:
  error authenticating: no auth sock variable&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ssh &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;23&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;対処法はエラーメッセージの中に書いてあるので，以下の様にssh-agentの起動と秘密鍵の登録を行います．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ssh-agent &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
Agent pid 1756
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-add
Identity added: &amp;lt;path to home&amp;gt;/.ssh/id_rsa &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;mail address&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再度，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo install cargo-edit&lt;/code&gt; を実行すると無事にインストールできました．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;cargo-edit
    Updating crates.io index
  Downloaded cargo-edit v0.8.0
  Downloaded 1 crate &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;61.1 KB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.40s
  Installing cargo-edit v0.8.0

...

   Compiling crates-index v0.17.0
   Compiling cargo-edit v0.8.0
    Finished release &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;optimized] target&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1m 05s
  Installing /usr/local/cargo/bin/cargo-add
  Installing /usr/local/cargo/bin/cargo-rm
  Installing /usr/local/cargo/bin/cargo-set-version
  Installing /usr/local/cargo/bin/cargo-upgrade
   Installed package &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-edit v0.8.0&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;executables &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-add&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-rm&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-set-version&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-upgrade&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;command-failed-due-to-unhandled-error-authentication-required-but-no-callback-set-classssh-23-codeauth--16-で-cargo-add-できない&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command failed due to unhandled error: authentication required but no callback set; class=Ssh (23); code=Auth (-16)&lt;/code&gt; で &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo add&lt;/code&gt; できない&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo add&lt;/code&gt; でクレートを追加しようとすると，以下の様にエラーが発生します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo add anyhow
    Updating &lt;span class=&quot;s1&quot;&gt;'https://github.com/rust-lang/crates.io-index'&lt;/span&gt; index
Command failed due to unhandled error: authentication required but no callback &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Ssh &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;23&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Auth &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/killercup/cargo-edit/issues/333&quot;&gt;こちら&lt;/a&gt;や&lt;a href=&quot;https://github.com/killercup/cargo-edit/issues/515&quot;&gt;こちら&lt;/a&gt;など，同様のエラーに関する報告はちらほら上がっているようです．しかしながら，それらの回避策は私の環境では有効性を発揮しませんでした．
従って，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo-edit&lt;/code&gt; のバージョンを &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.7.0&lt;/code&gt; にダウンロードすることとしました．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; cargo &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 0.7.0 cargo-edit
  Downloaded cargo-edit v0.7.0
  Downloaded 1 crate &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;57.6 KB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.69s
    Updating crates.io index
  Installing cargo-edit v0.7.0

...

 Replacing /usr/local/cargo/bin/cargo-upgrade
    Removing executable &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/usr/local/cargo/bin/cargo-set-version&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; from previous version cargo-edit v0.8.0
    Replaced package &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-edit v0.8.0&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; with &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-edit v0.7.0&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;executables &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-add&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-rm&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo-upgrade&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この結果，以下の様に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo add&lt;/code&gt; が動作する様になりました．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo add anyhow
    Updating &lt;span class=&quot;s1&quot;&gt;'https://github.com/rust-lng/crates.io-index'&lt;/span&gt; index
      Adding anyhow v1.0.53 to dependenciesa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/killercup/cargo-edit/issues/515&quot;&gt;cargo add no longer works with Git using SSH in 0.8.0 #515
&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/killercup/cargo-edit/issues/333&quot;&gt;SSH support #333 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Rust" /><summary type="html">はじめに cargo-edit v0.8.0が上手く動かなかったので，その対処法についてのメモです．</summary></entry><entry><title type="html">AWS Amplifyのメモ</title><link href="https://lab.ar90n.net/aws/web/cloud/amplify/2022/01/03/aws-amplify-tips.html" rel="alternate" type="text/html" title="AWS Amplifyのメモ" /><published>2022-01-03T00:00:00-06:00</published><updated>2022-01-03T00:00:00-06:00</updated><id>https://lab.ar90n.net/aws/web/cloud/amplify/2022/01/03/aws-amplify-tips</id><content type="html" xml:base="https://lab.ar90n.net/aws/web/cloud/amplify/2022/01/03/aws-amplify-tips.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;AWS Amplifyを使ってみて個人的にハマったことのメモです．&lt;/p&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;コンテナ（Fargate）に対して，環境に応じた環境変数を設定する&lt;/li&gt;
  &lt;li&gt;ロールに対して任意のポリシーを追加する&lt;/li&gt;
  &lt;li&gt;コンテナが配置されたVPCにリソースを配置する&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コンテナfargateに対して環境に応じた環境変数を設定する&quot;&gt;コンテナ（Fargate）に対して，環境に応じた環境変数を設定する&lt;/h2&gt;
&lt;p&gt;AWS AmplifyではAPIを実装するリソースとしてコンテナ（Fargate）がサポートされています．ですが，現状ではデプロイ環境（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prod&lt;/code&gt;など）に応じた環境変数を設定することができないようです．（少なくとも，私には見つけることができませんでした）&lt;/p&gt;

&lt;p&gt;最初は，CloudFormationの定義ファイルを手動で書き換えることで実現できると考えていました．ですが，実際に作業を進めるとこのファイルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amplify push&lt;/code&gt;のたびに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt;から生成されることが判明しました．そこで，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt;環境向けに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml.dev&lt;/code&gt;を，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prod&lt;/code&gt;環境向けに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml.prod&lt;/code&gt;をそれぞれ作成&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.amplify.aws/cli/project/command-hooks/&quot;&gt;コマンドフック&lt;/a&gt;を利用して，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amplify push&lt;/code&gt;のタイミングで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml.dev&lt;/code&gt;または&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml.prod&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt;にコピー&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という対応を採用しました．&lt;/p&gt;

&lt;h2 id=&quot;ロールに対して任意のポリシーを追加する&quot;&gt;ロールに対して任意のポリシーを追加する&lt;/h2&gt;
&lt;p&gt;カスタムリソースを追加した場合など，Lambdaに任意のポリシーを追加したい場合があると思います．そのような場合は，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custom-policies.json&lt;/code&gt;を利用するのが楽です．
一応，&lt;a href=&quot;https://aws.amazon.com/jp/blogs/news/extend-amplify-backend-with-custom-aws-resource-using-aws-cdk-or-cloudformation/&quot;&gt;ここ&lt;/a&gt;や&lt;a href=&quot;https://docs.amplify.aws/cli/usage/containers/#custom-policy-file-structure&quot;&gt;ここ&lt;/a&gt;など，AWSの公式ドキュメントにも記載されているようですが，目立つところには記載されていないため気がつくまでに時間がかかりました．&lt;/p&gt;

&lt;h2 id=&quot;コンテナが配置されたvpcにリソースを配置する&quot;&gt;コンテナが配置されたVPCにリソースを配置する&lt;/h2&gt;
&lt;p&gt;コンテナの配置されるVPCは, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amplify/backend/backend-config.json&lt;/code&gt;中に記述されている&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NetworkStack&lt;/code&gt;というリソースによって作成されれます．&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NetworkStack&lt;/code&gt;は&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CloudMapNamespaceId&lt;/li&gt;
  &lt;li&gt;ClusterName&lt;/li&gt;
  &lt;li&gt;Igw&lt;/li&gt;
  &lt;li&gt;SubnetIds&lt;/li&gt;
  &lt;li&gt;VpcCidrBlock&lt;/li&gt;
  &lt;li&gt;VpcId&lt;/li&gt;
  &lt;li&gt;VpcLinkId&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を出力します．必要なパラメータはリソースによって異なると思いますが，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SubnetIds&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VpcId&lt;/code&gt;などを参照することでコンテナと同じVPC内にリソースを配置することができると思います．&lt;/p&gt;

&lt;p&gt;上記パラメータを参照するためには，&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amplify/backend/backend-config.json&lt;/code&gt;において，上記パラメータを参照するリソースの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependsOn&lt;/code&gt;に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NetworkStack&lt;/code&gt;を追加
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependsOn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;category&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;resourceName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NetworkStack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;VpcId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SubnetIds&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;上述のリソースのCloudFormationの設定ファイルにパラメータの設定を追加.この際，パラメータ名は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NetworkStack&amp;lt;Attribute名&amp;gt;&lt;/code&gt;となります
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Parameters&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;NetworkStackVpcId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;String&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;NetworkStackSubnetIds&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CommaDelimitedList&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amplify env checkout &amp;lt;env&amp;gt;&lt;/code&gt;を実行して環境のチェックアウトを行う&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/news/extend-amplify-backend-with-custom-aws-resource-using-aws-cdk-or-cloudformation/&quot;&gt;AWS CDKまたはCloudFormationを使用し、カスタムAWSリソースでAmplifyバックエンドを拡張する新機能「カスタム」のご紹介&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.amplify.aws/&quot;&gt;Amplify Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="AWS" /><category term="Web" /><category term="Cloud" /><category term="Amplify" /><summary type="html">はじめに AWS Amplifyを使ってみて個人的にハマったことのメモです．</summary></entry><entry><title type="html">USB to TTLx4ケーブルの作成</title><link href="https://lab.ar90n.net/hardware/2021/08/26/make-usb-to-ttlx4.html" rel="alternate" type="text/html" title="USB to TTLx4ケーブルの作成" /><published>2021-08-26T00:00:00-05:00</published><updated>2021-08-26T00:00:00-05:00</updated><id>https://lab.ar90n.net/hardware/2021/08/26/make-usb-to-ttlx4</id><content type="html" xml:base="https://lab.ar90n.net/hardware/2021/08/26/make-usb-to-ttlx4.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;USBハブとUSBシリアルコンバータとを組み合わせることで，USB(1ch) to TTL(4ch) の変換ケーブルを作成しました．&lt;/p&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.aitendo.com/product/18898&quot;&gt;type-cコネクタ&lt;/a&gt;，&lt;a href=&quot;https://www.aitendo.com/product/20012&quot;&gt;USBハブコントローラ基板&lt;/a&gt;，&lt;a href=&quot;https://www.aitendo.com/product/17408&quot;&gt;USBシリアルコンバータ&lt;/a&gt;を組み合わせてUSB(1ch) to TTL(4ch)変換ケーブルを作成&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;回路設計&quot;&gt;回路設計&lt;/h2&gt;
&lt;p&gt;特別なことは特に何もしていません．&lt;a href=&quot;http://aitendo3.sakura.ne.jp/aitendo_data/product_img/ic/inteface/CH330N/CH330N.PDF&quot;&gt;CH330のデータシート&lt;/a&gt;に従って単純に部品を繋いで行きました．type-cコネクタは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VCC&lt;/code&gt;端子より&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5v&lt;/code&gt;を取得するため， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cc&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5.1kΩ&lt;/code&gt;でプルダウンしています．&lt;/p&gt;

&lt;p&gt;今回，&lt;a href=&quot;`https://easyeda.com/`&quot;&gt;EasyEDA&lt;/a&gt;を使って回路図を起こしてみたのですが中々使い勝手がよかったです．ブラウザ内で全てが完結するので環境構築が非常に簡単です．私は使用しませんでしたがPCBエディタとの連携機能もあるようです．また，各種ボード(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USB1&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HUB1&lt;/code&gt;)とケーブル(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TTL1&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TTL4&lt;/code&gt;)のピン番号はシステムの都合上割り当てています．そのため，実際にはピン番号はありません．何か良い方法があると良いのですが．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-08-28-make-usb-to-ttlx4/media/Schematic_USB_to_TTL4_2021-08-25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;実装&quot;&gt;実装&lt;/h2&gt;
&lt;p&gt;可能な限りケーブルの様に使いたかったので，USBハブコントローラ背面にカプトンテープを貼り，その上にUSBシリアルコンバータを実装しました．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-08-28-make-usb-to-ttlx4/media/dev1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次にケーブルを取り付け全体をグルーガンで固定します．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-08-28-make-usb-to-ttlx4/media/dev2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最後に熱収縮ケーブルで全体をさらに固定して完成です．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-08-28-make-usb-to-ttlx4/media/dev3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;動作確認&quot;&gt;動作確認&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsusb&lt;/code&gt;コマンドを実行すると以下のデバイスを確認できました．意図した通りに動作しているようです．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bus 020 Device 018: ID 1a40:0101 TERMINUS TECHNOLOGY INC. USB 2.0 Hub
Bus 020 Device 021: ID 1a86:7523 1a86 USB2.0-Serial
Bus 020 Device 029: ID 1a86:7523 1a86 USB2.0-Serial
Bus 020 Device 024: ID 1a86:7523 1a86 USB2.0-Serial
Bus 020 Device 010: ID 1a86:7523 1a86 USB2.0-Serial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;後から気が付いたこと&quot;&gt;後から気が付いたこと&lt;/h2&gt;
&lt;p&gt;今回はUSBハブとUSBシリアルコンバータとを組み合わせて所望の機能を実現しました．しかしながら，調べてみると同様の機能をワンチップで実現する&lt;a href=&quot;https://jp.silabs.com/interface/usb-bridges/classic/device.cp2108&quot;&gt;IC&lt;/a&gt;があるようです．次に同様のものを作る時はこちらを使いたいですね．&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://aitendo3.sakura.ne.jp/aitendo_data/product_img/ic/inteface/CH330N/CH330N.PDF&quot;&gt;USB 转串口芯片 CH330 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://emb.macnica.co.jp/articles/8968/&quot;&gt;組込み技術ラボ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="hardware" /><summary type="html">はじめに USBハブとUSBシリアルコンバータとを組み合わせることで，USB(1ch) to TTL(4ch) の変換ケーブルを作成しました．</summary></entry><entry><title type="html">k3sクラスタ on Raspberry Pi 4</title><link href="https://lab.ar90n.net/kubernetes/2021/08/21/k3s-cluster-on-rp4.html" rel="alternate" type="text/html" title="k3sクラスタ on Raspberry Pi 4" /><published>2021-08-21T00:00:00-05:00</published><updated>2021-08-21T00:00:00-05:00</updated><id>https://lab.ar90n.net/kubernetes/2021/08/21/k3s-cluster-on-rp4</id><content type="html" xml:base="https://lab.ar90n.net/kubernetes/2021/08/21/k3s-cluster-on-rp4.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;Raspberry Pi 4+k3sで構築したクラスタに関するメモです．&lt;/p&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;PC(master) + Raspberry Pi 4(worker)という構成でk3sクラスタを構築&lt;/li&gt;
  &lt;li&gt;grafana + ptometheus + loki + node-exporter + promtailという構成で監視基盤を構築&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;role関連の設定&quot;&gt;Role関連の設定&lt;/h2&gt;
&lt;p&gt;クラスタの監視を行うためには適切にサービスディスカバリを行う必要があります．そこで，サービスディスカバリに必要な権限を持つClusterRoleと対応するServiceAccountを定義します．
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/metrics&lt;/code&gt;にアクセスするためには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Role&lt;/code&gt;ではなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClusterRole&lt;/code&gt;である必要があるようです．(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;monitoring&lt;/code&gt;ネームスペース外にアクセスするから？)&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Namespace&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterRole&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apiGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nodes&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nodes/proxy&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;endpoints&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pods&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;verbs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;list&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;watch&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apiGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;extensions&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ingresses&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;verbs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;list&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;watch&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;nonResourceURLs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/metrics&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;verbs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterRoleBinding&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;roleRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterRole&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;apiGroup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rbac.authorization.k8s.io&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;subjects&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ServiceAccount&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ServiceAccount&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;promtailの導入&quot;&gt;promtailの導入　&lt;/h2&gt;
&lt;p&gt;とりあえず，ホストのログ(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/*log&lt;/code&gt;)をmasterで稼働しているlokiに送信します．各podのログ収集については中途半端な設定となっています．（多分動かない）
各ログには&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostname&lt;/code&gt;タグにホスト名を設定しています．これは，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spec.nodeName&lt;/code&gt;を環境変数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NODE_NAME&lt;/code&gt;に設定し，起動引数に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--client.external-labels=hostname=$(NODE_NAME)&lt;/code&gt;を追加することで実現しています．&lt;/p&gt;

&lt;p&gt;lokiはk3sクラスタ内ではなく，master上のDockerコンテナとしてホストされています．また，promtailはworkerとmaster両ノードにデプロイされます．
そのため，両環境下から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k3s-master&lt;/code&gt;の名前解決を行うため，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dnsPolicy&lt;/code&gt;を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;None&lt;/code&gt;として明示的にdnsサーバーを設定しています．
これは，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClusterFirst&lt;/code&gt;ではクラスタ外にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k3s-master&lt;/code&gt;の名前解決を行うことができず，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Default&lt;/code&gt;ではworkerとmasterとで共通の舐め解決設定を作り出すことができなかったためです．&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ConfigMap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail-config&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;config.yaml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;server:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;http_listen_port: 9080&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;grpc_listen_port: 0&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;positions:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;filename: /tmp/positions.yaml&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;clients:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- url: http://k3s-master:3100/loki/api/v1/push&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;scrape_configs:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;- job_name: system&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;static_configs:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- targets:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;- localhost&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;labels:&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;job: varlogs&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;__path__: /var/log/*log&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;- job_name: kubernetes-pods-app&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;kubernetes_sd_configs:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- role: pod&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DaemonSet&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;None&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dnsConfig&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;nameservers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;10.0.100.1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana/promtail:latest&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TZ&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Asia/Tokyo&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NODE_NAME&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;fieldRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;fieldPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;spec.nodeName&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--config.file=/etc/promtail/config.yaml&lt;/span&gt; 
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--client.external-labels=hostname=$(NODE_NAME)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;webui&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9080&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;config-volume&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/promtail&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlog&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;secret-volume&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/run/secrets&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/run/promtail&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;config-volume&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;configMap&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;promtail-config&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;varlog&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;secret-volume&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/run/secrets&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;run&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/run/promtail&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;node-exporterの導入&quot;&gt;node-exporterの導入&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node-exporter&lt;/code&gt;もworkerとmaster両環境にデプロイされます．&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DaemonSet&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node-exporter&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node-exporter&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node-exporter&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;prometheus.io/scrape&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true'&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;prometheus.io/port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;9100'&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;prometheus.io/path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/metrics&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Default&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node-exporter&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prom/node-exporter:latest&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TZ&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Asia/Tokyo&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NODE_NAME&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;fieldRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;fieldPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;spec.nodeName&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--path.procfs=/host/proc&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--path.sysfs=/host/sys&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--collector.filesystem.ignored-mount-points&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9100&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;proc&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/host/proc&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sys&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/host/sys&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rootfs&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/rootfs&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;proc&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/proc&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sys&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/sys&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rootfs&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/rootfs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lokiprometheusgrafanaの導入&quot;&gt;loki，prometheus，grafanaの導入&lt;/h2&gt;
&lt;p&gt;これらのソフトウェアはDockerコンテナとしてホストされています．&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;は以下の通りです．&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.2&quot;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;monitoring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;loki&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana/loki:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3100:3100&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-config.file=/etc/loki/local-config.yaml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./loki/local-config.yml&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/loki/local-config.yaml&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;grafana&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana/grafana:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3000:3000&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./grafana/provisioning&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/grafana/provisioning&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;volume&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grafana_data&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/grafana&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;monitoring&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;grafana_data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local-config.yaml&lt;/code&gt;は以下の通りです．デフォルトから特に変更していなかったと思います．&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;auth_enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;http_listen_port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3100&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;ingester&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;lifecycler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;kvstore&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;inmemory&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;replication_factor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;final_sleep&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0s&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;chunk_idle_period&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1h&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;# Any chunk not receiving new logs in this time will be flushed&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;max_chunk_age&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1h&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;# All chunks will be flushed when they hit this age, default is 1h&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;chunk_target_size&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1048576&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Loki will attempt to build chunks up to 1.5MB, flushing first if chunk_idle_period or max_chunk_age is reached first&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;chunk_retain_period&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;30s&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# Must be greater than index read cache TTL if using an index cache (Default index read cache TTL is 5m)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;max_transfer_retries&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# Chunk transfers disabled&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;schema_config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2020-10-24&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;boltdb-shipper&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;object_store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;filesystem&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v11&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index_&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;period&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;24h&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;storage_config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;boltdb_shipper&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;active_index_directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/boltdb-shipper-active&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cache_location&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/boltdb-shipper-cache&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cache_ttl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;24h&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# Can be increased for faster performance over longer query periods, uses more disk space&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;shared_store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;filesystem&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;filesystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/chunks&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;compactor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/boltdb-shipper-compactor&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;shared_store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;filesystem&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;limits_config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;reject_old_samples&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;reject_old_samples_max_age&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;168h&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;chunk_store_config&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;max_look_back_period&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0s&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;table_manager&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;retention_deletes_enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;retention_period&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0s&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;ruler&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/rules&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;rule_path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/loki/rules-temp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;alertmanager_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://localhost:9093&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;kvstore&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;inmemory&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;enable_api&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://i101330.hatenablog.com/entry/2019/08/18/142339&quot;&gt;Lokiとpromtailことはじめ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tmp1024.com/observe-kubernetes-all-nodes-of-prometheus/&quot;&gt;Kubernetesの全NodeをPrometheusで監視する方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Kubernetes" /><summary type="html">はじめに Raspberry Pi 4+k3sで構築したクラスタに関するメモです．</summary></entry><entry><title type="html">Ubuntu 20.04をシリアルコンソール経由で操作する</title><link href="https://lab.ar90n.net/ubuntu/2021/05/26/use-serial-console-in-ubuntu.html" rel="alternate" type="text/html" title="Ubuntu 20.04をシリアルコンソール経由で操作する" /><published>2021-05-26T00:00:00-05:00</published><updated>2021-05-26T00:00:00-05:00</updated><id>https://lab.ar90n.net/ubuntu/2021/05/26/use-serial-console-in-ubuntu</id><content type="html" xml:base="https://lab.ar90n.net/ubuntu/2021/05/26/use-serial-console-in-ubuntu.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;普段SSHで管理しているサーバーが，ネットワーク関連のトラブルに見舞われると，いつも通りにログインできず色々と大変です．
そこで，Ubuntu 20.04をシリアルコンソール経由で操作する環境を構築します．&lt;/p&gt;

&lt;h2 id=&quot;やったこと&quot;&gt;やったこと&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;USB-TTLケーブルによる代用シリアルケーブルの作成&lt;/li&gt;
  &lt;li&gt;udevによるケーブル挿入をトリガーとしたシリアルコンソールの有効化&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ケーブル作成&quot;&gt;ケーブル作成&lt;/h2&gt;
&lt;p&gt;特殊なケースを除くと，最近のPCにはシリアルポートが付属していません．
そこで，２本のUSB-TTL変換ケーブルを直結することでシリアルケーブルの代用とします．
今回，安価に購入可能な&lt;a href=&quot;https://www.amazon.co.jp/gp/product/B00K7YYFNM/&quot;&gt;こちらのケーブル&lt;/a&gt;を使用しました．
代用ケーブルの作成は，両ケーブルのピンソケットを切断し，以下の様に緑と白を交差して結線します．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;赤&amp;gt; ---------------- &amp;lt;赤&amp;gt;
&amp;lt;緑&amp;gt; -------\/------- &amp;lt;緑&amp;gt;
&amp;lt;白&amp;gt; -------/\------- &amp;lt;白&amp;gt;
&amp;lt;黒&amp;gt; ---------------- &amp;lt;黒&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;作成したケーブルの動作確認は両端をUSBポートに挿入し，接続したマシンで以下の様に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cu&lt;/code&gt;コマンドを実行します．
接続が適切に行われると，一方の端末で入力した文字列が他方の端末に表示されると思います． （同一マシンでも可能です）&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cu &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /dev/ttyUSB0 &lt;span class=&quot;c&quot;&gt;# &amp;lt;- ttyUSB0の部分は環境によります&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;シリアルコンソールの有効化&quot;&gt;シリアルコンソールの有効化&lt;/h2&gt;
&lt;p&gt;代用ケーブルを接続したマシンにて，以下のコマンド実行するとシリアルコンソールを有効化することができます．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo systemctl enable serial-getty@ttyUSB0.service  # &amp;lt;- ttyUSB0の部分は環境によります
$ sudo systemctl start serial-getty@ttyUSB0.service  # &amp;lt;- ttyUSB0の部分は環境によります
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;その後，もう一方を接続したマシンにて，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cu&lt;/code&gt;コマンドを用いて接続します．すると，以下の様にログインプロンプトが確認できます．(slimeはホスト名です)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo cu -l /dev/ttyUSB0 # &amp;lt;- ttyUSB0の部分は環境によります
Password:
Connected.

slime login:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;udevによるシリアルコンソールの自動起動&quot;&gt;udevによるシリアルコンソールの自動起動&lt;/h2&gt;

&lt;p&gt;常時ケーブルを刺しっぱなしにするのは不便なので，ケーブルを挿入したタイミングで，シリアルコンソールが有効化されるように設定します．
ですが，普通にUSB-TTL変換ケーブルを使いたい時もあるので，単純に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ttyUSB0&lt;/code&gt;を関しするだけでは都合が悪そうです．
そこで，特定のVendor IDとProduct IDを持つUSB-Serialデバイスが接続された場合のみシリアルコンソールを有効化します．
Vendor IDとProduct IDは以下のコマンドで確認します．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ udevadm test-builtin usb_id /sys/class/tty/ttyUSB0
Load module index
Parsed configuration file /usr/lib/systemd/network/99-default.link
Parsed configuration file /usr/lib/systemd/network/73-usb-net-by-mac.link
Created link configuration context.
ID_VENDOR=Prolific_Technology_Inc.
ID_VENDOR_ENC=Prolific\x20Technology\x20Inc.
ID_VENDOR_ID=067b
ID_MODEL=USB-Serial_Controller
ID_MODEL_ENC=USB-Serial\x20Controller
ID_MODEL_ID=2303
ID_REVISION=0300
ID_SERIAL=Prolific_Technology_Inc._USB-Serial_Controller
ID_TYPE=generic
ID_BUS=usb
ID_USB_INTERFACES=:ff0000:
ID_USB_INTERFACE_NUM=00
ID_USB_DRIVER=pl2303
Unload module index
Unloaded link configuration context.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ID_VENDOR_ID=067b&lt;/code&gt; および &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ID_MODEL_ID=2303&lt;/code&gt; とあるので，Vendor IDが067bかつProduct IDが2303であることが確認できます．
これは，今回使用するケーブルはPL2303を使っているためです.従って，PL2303が接続されるとシリアルコンソールが有効化されることになります．&lt;/p&gt;

&lt;p&gt;以上の結果を元に，以下の様にudevの設定を追加します．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat /etc/udev/rules.d/65-serial-console.rules
ACTION==&quot;remove&quot;, GOTO=&quot;serial_end&quot;
SUBSYSTEM!=&quot;tty&quot;, GOTO=&quot;serial_end&quot;

ENV{ID_VENDOR_ID}==&quot;067b&quot;, ENV{ID_MODEL_ID}==&quot;2303&quot;, ENV{SYSTEMD_WANTS}+=&quot;serial-getty@ttyUSB$env{.ID_PORT}.service&quot;

LABEL=&quot;serial_end&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1,2行目は，USB-TTLケーブル挿入時以外は処理をスキップすることを表しています．
4行目はVendor IDが067bかつProduct IDが2303である場合，対応するttyUSBに対してserial-gettyサービスを有効化することを表しています．&lt;/p&gt;

&lt;p&gt;設定後，以下のコマンドでケーブル挿入の前後で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serial-getty@ttyUSB0.service&lt;/code&gt;が有効化されていることを確認できます．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ケーブル挿入前&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$sudo systemctl status serial-getty@ttyUSB0.service
● serial-getty@ttyUSB0.service - Serial Getty on ttyUSB0
     Loaded: loaded (/lib/systemd/system/serial-getty@.service; enabled; vendor preset: enabled)
     Active: inactive (dead) since Sun 2021-05-23 03:26:14 UTC; 2s ago
       Docs: man:agetty(8)
             man:systemd-getty-generator(8)
             http://0pointer.de/blog/projects/serial-console.html
    Process: 3803 ExecStart=/sbin/agetty -o -p -- \u --keep-baud 115200,38400,9600 ttyUSB0 $TERM (code=killed, signal=HUP)
   Main PID: 3803 (code=killed, signal=HUP)

May 23 03:26:14 slime systemd[1]: Stopped Serial Getty on ttyUSB0.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ケーブル挿入後&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo systemctl status serial-getty@ttyUSB0.service
● serial-getty@ttyUSB0.service - Serial Getty on ttyUSB0
     Loaded: loaded (/lib/systemd/system/serial-getty@.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-05-23 03:26:21 UTC; 1s ago
       Docs: man:agetty(8)
             man:systemd-getty-generator(8)
             http://0pointer.de/blog/projects/serial-console.html
   Main PID: 4494 (agetty)
      Tasks: 1 (limit: 76982)
     Memory: 348.0K
     CGroup: /system.slice/system-serial\x2dgetty.slice/serial-getty@ttyUSB0.service
             └─4494 /sbin/agetty -o -p -- \u --keep-baud 115200,38400,9600 ttyUSB0 vt220

May 23 03:26:21 slime systemd[1]: Started Serial Getty on ttyUSB0.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/falcon8823/items/cf6ace48b94946330f24&quot;&gt;Ubuntu 15.10 でシリアルコンソールを有効にする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gihyo.jp/admin/serial/01/ubuntu-recipe/0555&quot;&gt;Ubuntu Weekly Recipe 第555回　いま，あらためてudev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thinkami.hatenablog.com/entry/2015/06/25/064658&quot;&gt;Raspberry Pi 2 + systemd + udevで、USBデバイス挿入時にサービスを起動する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Ubuntu" /><summary type="html">はじめに 普段SSHで管理しているサーバーが，ネットワーク関連のトラブルに見舞われると，いつも通りにログインできず色々と大変です． そこで，Ubuntu 20.04をシリアルコンソール経由で操作する環境を構築します．</summary></entry><entry><title type="html">Rustでレイトレーシングをしてみる</title><link href="https://lab.ar90n.net/rust/computergraphics/2021/03/30/ray-tracing-in-weekend.html" rel="alternate" type="text/html" title="Rustでレイトレーシングをしてみる" /><published>2021-03-30T00:00:00-05:00</published><updated>2021-03-30T00:00:00-05:00</updated><id>https://lab.ar90n.net/rust/computergraphics/2021/03/30/ray-tracing-in-weekend</id><content type="html" xml:base="https://lab.ar90n.net/rust/computergraphics/2021/03/30/ray-tracing-in-weekend.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;Rustの勉強を兼ねて，&lt;a href=&quot;http://in1weekend.blogspot.com/&quot;&gt;こちら&lt;/a&gt;を参考にレイトレーシングを写経してみました．&lt;/p&gt;

&lt;div class=&quot;github-card&quot; data-github=&quot;ar90n/ray-tracing-in-weekends-with-rust&quot; data-width=&quot;400&quot; data-height=&quot;153&quot; data-theme=&quot;default&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;//cdn.jsdelivr.net/github-cards/latest/widget.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;メモ&quot;&gt;メモ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;十分な数のRayを計算しなければ綺麗な画像は得られない．レイトレーシング結果のサンプルで，画素が黒く欠損しているのは十分な数のRayを計算していないから&lt;/li&gt;
  &lt;li&gt;Rayによってランダムにサンプリングすることで，ブラーやボケやアンチエイリアシングを表現する&lt;/li&gt;
  &lt;li&gt;思っていたよりも単純&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結果&quot;&gt;結果&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1週目
&lt;img src=&quot;https://raw.githubusercontent.com/ar90n/ray-tracing-in-weekends-with-rust/main/assets/output_firest_weekend.jpg&quot; alt=&quot;first_weekend&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2週目
&lt;img src=&quot;https://raw.githubusercontent.com/ar90n/ray-tracing-in-weekends-with-rust/main/assets/output_second_weekend.jpg&quot; alt=&quot;second_weekend&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://in1weekend.blogspot.com/2016/01/ray-tracing-in-one-weekend.html&quot;&gt;Ray Tracing in One Weekend&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://in1weekend.blogspot.com/2016/01/ray-tracing-second-weekend.html&quot;&gt;Ray Tracing: the Next Week&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Rust" /><category term="ComputerGraphics" /><summary type="html">はじめに Rustの勉強を兼ねて，こちらを参考にレイトレーシングを写経してみました．</summary></entry><entry><title type="html">glutinに入門してみる</title><link href="https://lab.ar90n.net/rust/glutin/opengl/computergraphics/2021/02/01/getting-started-with-glutin.html" rel="alternate" type="text/html" title="glutinに入門してみる" /><published>2021-02-01T00:00:00-06:00</published><updated>2021-02-01T00:00:00-06:00</updated><id>https://lab.ar90n.net/rust/glutin/opengl/computergraphics/2021/02/01/getting-started-with-glutin</id><content type="html" xml:base="https://lab.ar90n.net/rust/glutin/opengl/computergraphics/2021/02/01/getting-started-with-glutin.html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-windowing/glutin&quot;&gt;glutin&lt;/a&gt; に入門した記録です． Objファイルをロードして，スタンフォードバニーを表示するサンプルプログラムを作成します．&lt;/p&gt;

&lt;h2 id=&quot;glutinとは&quot;&gt;glutinとは&lt;/h2&gt;
&lt;p&gt;Rustで記述されたOpenGLのラッパーライブラリです． 
OpenGLのラッパーライブラリには抽象度が高いものから低いものまで様々あります．
本ライブラリは，それらの中でも抽象度が低い，低レベルな機能を提供することを目的としたライブラリです．
したがって，OpenGL相当の非常にプリミティブな機能しか提供されていません．&lt;/p&gt;

&lt;p&gt;glutinの実装の興味深い点に，ユーザが指定したAPIのバインディングをビルド時に動的に生成する点が挙げられます．
この機能の利用方法については， サンプルプログラムの動作を通じて後述します．&lt;/p&gt;

&lt;h2 id=&quot;サンプルプログラムの解析&quot;&gt;サンプルプログラムの解析&lt;/h2&gt;
&lt;h3 id=&quot;サンプルプログラムの実行&quot;&gt;サンプルプログラムの実行&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-windowing/glutin#try-it&quot;&gt;リポジトリページ&lt;/a&gt;にある手順に従ってサンプルプログラムを実行します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/rust-windowing/glutin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;glutin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--example&lt;/span&gt; window
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;すると，以下のようなウィンドウが表示されます．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-02-01-getting-started-with-glutin/media/sample.png&quot; alt=&quot;sample&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;gl_bindingsrsの生成&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;の生成&lt;/h3&gt;
&lt;p&gt;それでは，このサンプルプログラムの詳細をみていきます．&lt;/p&gt;

&lt;p&gt;まず，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cargo.toml&lt;/code&gt;を見てみます．すると，以下のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.rs&lt;/code&gt;がbuild scriptが設定されていることが確認できます．&lt;/p&gt;

&lt;div class=&quot;language-toml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;glutin_examples&quot;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;build.rs&quot;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[build-dependencies]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;gl_generator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.14&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.rs&lt;/code&gt;を確認すると，１２行目から１４行目において，GLES 2.0のバインディングを生成していることが確認できます．
この処理は，&lt;a href=&quot;https://github.com/brendanzab/gl-rs/tree/master/gl_generator&quot;&gt;gl_generator&lt;/a&gt;を用いて実現されています．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gl_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fallbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PathBuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PathBuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;OUT_DIR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cargo:rerun-if-changed=build.rs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gl_bindings.rs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Gles2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Fallbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;All&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.write_bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gl_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StructGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;次に，実際にどのようあファイルが生成されているかを確認します．
環境変数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OUT_DIR&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo&lt;/code&gt;によって設定されてしまうため，任意の値を設定することができません．
そこで，以下のように環境変数名を変更します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff
diff &lt;span class=&quot;nt&quot;&gt;--git&lt;/span&gt; a/glutin_examples/build.rs b/glutin_examples/build.rs
index 77f6fa5..4ff7c4e 100644
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; a/glutin_examples/build.rs
+++ b/glutin_examples/build.rs
@@ &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt;,7 +4,7 @@ use std::fs::File&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 use std::path::PathBuf&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 fn main&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
-    &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;dest &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PathBuf::from&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;env::var&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;OUT_DIR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.unwrap&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+    &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;dest &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PathBuf::from&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;env::var&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TMP_OUT_DIR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.unwrap&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     println!&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cargo:rerun-if-changed=build.rs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;そして，ビルドすると&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;というファイルが作成されていることが確認できます．
ファイルの内容を確認すると，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GLES 2.0&lt;/code&gt;に利用されるデータ構造のバインディングか確認できます．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ TMP_OUT_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; cargo build &lt;span class=&quot;nt&quot;&gt;--example&lt;/span&gt; window
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;gl_bindings.rs
gl_bindings.rs
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 32 gl_bindings.rs

        mod __gl_imports &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            pub use std::mem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            pub use std::marker::Send&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            pub use std::os::raw&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


        pub mod types &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#![allow(non_camel_case_types, non_snake_case, dead_code, missing_copy_implementations)]&lt;/span&gt;

// Common types from OpenGL 1.1
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLenum &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_uint&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLboolean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_uchar&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLbitfield &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_uint&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLvoid &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_void&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLbyte &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_char&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLshort &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_short&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLint &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_int&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLclampx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_int&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLubyte &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_uchar&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLushort &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_ushort&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLuint &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_uint&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLsizei &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_int&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLfloat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_float&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLclampf &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_float&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLdouble &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_double&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLclampd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_double&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLeglImageOES &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;const super::__gl_imports::raw::c_void&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLchar &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_char&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
pub &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;GLcharARB &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; super::__gl_imports::raw::c_char&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;次に，ターゲットのAPIを&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Api::Gl&lt;/code&gt;に変更して&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'gl_bindings.rs&lt;/code&gt;を生成してみます.
すると，先ほど生成した&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;とは内容が異なることが確認できます．
このように，ターゲットや機能に合わせて，バックエンドを静的に切り替えて使用することが可能です．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;gl_bindings.rs gl_bindings_gles2.rs
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff
diff &lt;span class=&quot;nt&quot;&gt;--git&lt;/span&gt; a/glutin_examples/build.rs b/glutin_examples/build.rs
index 77f6fa5..7e149bd 100644
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; a/glutin_examples/build.rs
+++ b/glutin_examples/build.rs
@@ &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt;,12 +4,12 @@ use std::fs::File&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 use std::path::PathBuf&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 fn main&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
-    &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;dest &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PathBuf::from&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;env::var&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;OUT_DIR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.unwrap&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+    &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;dest &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PathBuf::from&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;env::var&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TMP_OUT_DIR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.unwrap&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     println!&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cargo:rerun-if-changed=build.rs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;mut file &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; File::create&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;amp;dest.join&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gl_bindings.rs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;.unwrap&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
-    Registry::new&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Api::Gles2, &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3, 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Profile::Core, Fallbacks::All, &lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;
+    Registry::new&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Api::Gl, &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3, 3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, Profile::Core, Fallbacks::All, &lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;
         .write_bindings&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gl_generator::StructGenerator, &amp;amp;mut file&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
         .unwrap&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ TMP_OUT_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; cargo build &lt;span class=&quot;nt&quot;&gt;--example&lt;/span&gt; window
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diff gl_bindings.rs gl_bindings_gles2.rs | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 32
121a122
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_ATOMIC_COUNTER_BUFFERS: types::GLenum = 0x92D9;&lt;/span&gt;
123a125,126
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_PROGRAM: types::GLenum = 0x8259;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_RESOURCES: types::GLenum = 0x92F5;&lt;/span&gt;
128a132
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ACTIVE_VARIABLES: types::GLenum = 0x9305;&lt;/span&gt;
129a134,136
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ALIASED_POINT_SIZE_RANGE: types::GLenum = 0x846D;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ALL_BARRIER_BITS: types::GLenum = 0xFFFFFFFF;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ALL_SHADER_BITS: types::GLenum = 0xFFFFFFFF;&lt;/span&gt;
130a138
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ALPHA_BITS: types::GLenum = 0x0D55;&lt;/span&gt;
133,135d140
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const AND: types::GLenum = 0x1501;&lt;/span&gt;
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const AND_INVERTED: types::GLenum = 0x1504;&lt;/span&gt;
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const AND_REVERSE: types::GLenum = 0x1502;&lt;/span&gt;
136a142
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ANY_SAMPLES_PASSED_CONSERVATIVE: types::GLenum = 0x8D6A;&lt;/span&gt;
138a145,152
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ARRAY_SIZE: types::GLenum = 0x92FB;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ARRAY_STRIDE: types::GLenum = 0x92FE;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BARRIER_BIT: types::GLenum = 0x00001000;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BUFFER: types::GLenum = 0x92C0;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BUFFER_BINDING: types::GLenum = 0x92C1;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BUFFER_INDEX: types::GLenum = 0x9301;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BUFFER_SIZE: types::GLenum = 0x92C3;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const ATOMIC_COUNTER_BUFFER_START: types::GLenum = 0x92C2;&lt;/span&gt;
141,146d154
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const BACK_LEFT: types::GLenum = 0x0402;&lt;/span&gt;
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const BACK_RIGHT: types::GLenum = 0x0403;&lt;/span&gt;
&amp;lt; &lt;span class=&quot;c&quot;&gt;#[allow(dead_code, non_upper_case_globals)] pub const BGR: types::GLenum = 0x80E0;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ウィンドウの表示とポリゴンの描画&quot;&gt;ウィンドウの表示とポリゴンの描画&lt;/h3&gt;
&lt;p&gt;先ほど実行したサンプルプログラムに対応するコードは&lt;a href=&quot;https://github.com/rust-windowing/glutin/blob/master/glutin_examples/examples/window.rs&quot;&gt;こちら&lt;/a&gt;になります．
それでは，こちらの内容を先頭から紹介していきます．&lt;/p&gt;

&lt;p&gt;まずは，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;support&lt;/code&gt;モジュールと利用する&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;glutin&lt;/code&gt;のモジュールのインポートです．
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;support&lt;/code&gt;モジュールは，ポリゴンの生成と描画，頂点シェーダ，フラグメントシェーダなど，サンプルプログラムに表示された三角形を描画するための処理が含まれています．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;support&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glutin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WindowEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glutin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;event_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ControlFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glutin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WindowBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;glutin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContextBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;次にmain関数です．main関数では，まず初めにイベントループ，ウィンドウ，このウインドウと紐づいたGLコンテキストを作成します．
コード中の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windowed_context&lt;/code&gt;とは，ウインドウとこのウィンドウに紐づいたGLコンテキストとを表現する構造体になります．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;EventLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;WindowBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.with_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A fantastic window!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ContextBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.build_windowed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.make_current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pixel format of the window's GL context: {:?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.get_pixel_format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;次にコンテキストの取得を行います．この処理は，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;support::load&lt;/code&gt;によって実現します．
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;support::load&lt;/code&gt;では，以下のような処理が実行されます．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;頂点シェーダとフラグメントシェーダのコンパイル&lt;/li&gt;
  &lt;li&gt;シェーダプログラムの作成&lt;/li&gt;
  &lt;li&gt;三角形のポリゴンを表す頂点バッファオブジェクトと頂点配列オブジェクトの作成&lt;/li&gt;
  &lt;li&gt;上記各種リソースのGLコンテキストへの割り当て&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このコンテキストは上述のGLコンテキストを内部に持ち，各種描画処理を移譲します．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;support&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最後にイベントハンドラです．このイベントハンドラは先ほど作成したイベントループ渡され，何かイベントが発生するたびに呼び出されます．
従って，イベントハンドラでは，発生したイベントの識別とそのイベントに対応する振る舞いを記述する必要があります．
各イベントに対する振る舞いについては，コード中にコメントとして追記しました．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;control_flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{:?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;control_flow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ControlFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoopDestroyed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// イベントループか破棄されたのでインベントハンドラから抜ける&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WindowEvent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nn&quot;&gt;WindowEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Resized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;physical_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;physical_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// ウインドウをリサイズ&lt;/span&gt;
                &lt;span class=&quot;nn&quot;&gt;WindowEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CloseRequested&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;control_flow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ControlFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// ウインドウを閉じる&lt;/span&gt;
                &lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RedrawRequested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.draw_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// ポリゴンの描画．&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;windowed_context&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.swap_buffers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// オフスクリーンに描画した結果を表示する&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;スタンフォードバニーを表示する&quot;&gt;スタンフォードバニーを表示する&lt;/h2&gt;
&lt;p&gt;Objファイルを読み取り，スタンフォードバニーを描画する&lt;a href=&quot;https://github.com/ar90n/lab/tree/master/sandbox/rust-opengl-obj-loader&quot;&gt;サンプルプログラム&lt;/a&gt;を作成しました．
このサンプルを実行すると，以下のような画面が表示されます．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-02-01-getting-started-with-glutin/media/bunny.gif&quot; alt=&quot;sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;全体の構成は，glutinのサンプルプログラムを大きく変更はありません，
従って，比較的容易に読み取ることが可能かと思います．
しかしながら，幾つか新しい試みを行っているため，それらについて紹介します．&lt;/p&gt;

&lt;h3 id=&quot;gl_bindingsrsのソースツリーへの取り込み&quot;&gt;gl_bindings.rsのソースツリーへの取り込み&lt;/h3&gt;
&lt;p&gt;前述した通り，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;はビルド時に動的に生成されます．従って，これらが提供する型を編集時に取得することはできません．
そのため，このままではコード補完や静的解析を行うことができません．
Rustによる開発では，これらのツールは非常に重要であるため，このままでは非常に辛い開発が強いられます．&lt;/p&gt;

&lt;p&gt;そこで，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_buildings.rs&lt;/code&gt;をソースツリーに取り込んでしまうことにしました．
具体的には，以下のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;の保存先を変更します．&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PathBuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;env!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CARGO_MANIFEST_DIR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cargo:rerun-if-changed=build.rs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gl_bindings.rs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Gl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Fallbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;All&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.write_bindings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gl_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StructGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この変更により，初回のビルド以降は以下のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;がソースツリー内に存在します．
従って，コード補完や静的解析が適切に動作します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; ./src
context.rs      gl_bindings.rs  main.rs         obj.rs          shader.rs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意点としては，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gl_bindings.rs&lt;/code&gt;は動的に生成されるものなのでリポジトリに含んではいけないことです．
従って，以下のように&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;に追加します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .gitignore
src/gl_bindings.rs
target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;objファイルについて&quot;&gt;Objファイルについて&lt;/h3&gt;
&lt;p&gt;Objファイルと呼ばれるファイルフォーマットには様々なものがあります．
ここで使用するのは，3Dモデルを表現するために用いられるObjファイルです．
また，Objファイルは頂点，面，法線など様々なデータを格納することができます．
ここでは，以下のように頂点とそれらによって構成される面のみを対象とします．&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;v &amp;lt;頂点番号1&amp;gt; &amp;lt;X座標1&amp;gt; &amp;lt;Y座標1&amp;gt; &amp;lt;Z座標1&amp;gt;
v &amp;lt;頂点番号2&amp;gt; &amp;lt;X座標2&amp;gt; &amp;lt;Y座標2&amp;gt; &amp;lt;Z座標2&amp;gt;

...

f &amp;lt;面番号1&amp;gt; &amp;lt;頂点番号i&amp;gt; &amp;lt;頂点番号j&amp;gt; &amp;lt;頂点番号k&amp;gt;

...

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.rs/glutin/0.26.0/glutin/&quot;&gt;glutin&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Rust" /><category term="glutin" /><category term="OpenGL" /><category term="ComputerGraphics" /><summary type="html">はじめに glutin に入門した記録です． Objファイルをロードして，スタンフォードバニーを表示するサンプルプログラムを作成します．</summary></entry><entry><title type="html">starshipの導入</title><link href="https://lab.ar90n.net/tool/2021/01/06/install-starship.html" rel="alternate" type="text/html" title="starshipの導入" /><published>2021-01-06T00:00:00-06:00</published><updated>2021-01-06T00:00:00-06:00</updated><id>https://lab.ar90n.net/tool/2021/01/06/install-starship</id><content type="html" xml:base="https://lab.ar90n.net/tool/2021/01/06/install-starship.html">&lt;h2 id=&quot;cicaを導入する&quot;&gt;Cicaを導入する&lt;/h2&gt;
&lt;p&gt;startshipを使用するためには，事前にNerdFontを導入する必要があります．
そこで，今回は&lt;a href=&quot;https://github.com/miiton/Cica&quot;&gt;Cica&lt;/a&gt;を使用しました．
導入は&lt;a href=&quot;https://github.com/miiton/Cica/releases/latest&quot;&gt;リリースページ&lt;/a&gt;から配布されているアーカイブをダウンロードしttfファイルをダブルクリックで完了です．&lt;/p&gt;

&lt;h2 id=&quot;startshipを導入する&quot;&gt;startshipを導入する&lt;/h2&gt;
&lt;p&gt;brewを使ってstartshipを導入します．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;starship
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以下のように良い感じです．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2021-01-06-install-starship/media/sc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Tool" /><summary type="html">Cicaを導入する startshipを使用するためには，事前にNerdFontを導入する必要があります． そこで，今回はCicaを使用しました． 導入はリリースページから配布されているアーカイブをダウンロードしttfファイルをダブルクリックで完了です．</summary></entry></feed>