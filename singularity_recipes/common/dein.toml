[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft=['toml']

[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
    colorscheme gruvbox
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = './install.sh nightly'
hook_add = '''
" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=no

" Use `[g` and `]g` to navigate diagnostics
nmap <silent> <Leader>k <Plug>(coc-diagnostic-prev)
nmap <silent> <Leader>j <Plug>(coc-diagnostic-next)

" GoTo code navigation.
nmap <silent> <Leader>gd <Plug>(coc-definition)
nmap <silent> <Leader>gt <Plug>(coc-type-definition)
nmap <silent> <Leader>gi <Plug>(coc-implementation)
nmap <silent> <Leader>gr <Plug>(coc-references)

" Symbol renaming.
nmap <slient> <Leader>dn <Plug>(coc-rename)

" Use K to show documentation in preview window.
nnoremap <silent> <Leader>dd :call <SID>show_documentation()<CR>

" Use F to call format action
nnoremap <silent> F :call CocAction('format')<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

" Mappings using CoCList:
" Show all diagnostics.
nnoremap <silent> <Leader>da  :<C-u>CocList diagnostics<cr>
" Find symbol of current document.
nnoremap <silent> <Leader>do  :<C-u>CocList outline<cr>
" Search workspace symbols.
nnoremap <silent> <Leader>ds  :<C-u>CocList -I symbols<cr>
" Show commands.
nnoremap <silent> <Leader>p  :<C-u>CocList commands<cr>
" Do default action for next item.
nnoremap <silent> <Leader>j  :<C-u>CocNext<CR>
" Do default action for previous item.
nnoremap <silent> <Leader>k  :<C-u>CocPrev<CR>
" Resume latest coc list.
nnoremap <silent> <space>P  :<C-u>CocListResume<CR>

" Use <C-k> to confirm completion, `<C-g>u` means break undo chain at current
" position. Coc only does snippet and additional edit on confirm.
if exists('*complete_info')
  inoremap <expr> <C-k> complete_info()["selected"] != "-1" ? "\<C-y>" : "\<C-g>u\<CR>"
else
  inoremap <expr> <C-K> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
endif
'''
